#+TITLE: Wagtail Store

*Wagtail store following "django 3 by example" store example*

* Todos
** [7/21] Development
+ [X] Product + Catogory model
+ [X] Order model + modeladmin
+ [X] Cart
+ [X] Celery email
+ [-] Payment integration with Stripe
  + [X] checkout
  + [X] stripe hooks for checkout process
  + [ ] receive payouts
  + [ ] hook for refunds process
+ [X] Add filtering and exporting func to modelAdmin for Products and Orders
+ [-] Invoicing + email templates
  - [X] normal django email
  - [ ] Sending with an email provider like sendgrid
+ [-] Product filtering
+ [X] orders management for anomymous customers
  - [X] retreive orders with order id
  - [X] refund order system for retrieved order
+ [X] Product recommendation
+ [ ] Discount system
+ [ ] User authentication
+ [ ] Collections + Product attributes
+ [ ] Inventory Management 
+ [ ] Shipping Management
+ [ ] International Store (language, currency, shipping)
+ [ ] Add buttons to dashboard to directly changed order status
+ [ ] Add analytics to dashboard (google + custom)
+ [ ] Maybe Connect to telegram bot for real time updates and semi-automatisation
+ [ ] Dropshipping automatisation
+ [ ] customers being able to review product bought
  
** [0/11] Frontend
+ [ ] Home
+ [ ] About
+ [ ] Contact
+ [ ] Product List
+ [ ] Product detail
+ [ ] Cart
+ [ ] Checkout
+ [ ] Successful Payment
+ [ ] Cancelled Payment
+ [ ] Retrieve Order
+ [ ] Ask for Refund
  
** [0/7] Production
Will most likely go with digital ocean

+ [ ] Setup server (firewall, user, etc.)
+ [ ] Create Postgres db
+ [ ] Setup production emails
+ [ ] Setup Celery and rabbitmq for production
+ [ ] Integrate Stripe in Production mode
+ [ ] Maybe log system

** [0/1] Testing
+ [ ] CRUD testing
  - [ ] Products
  - [ ] Orders
...
